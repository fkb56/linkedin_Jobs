name: Build & Publish to npm

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Type de bump de version (patch, minor, major)'
        required: false
        default: 'patch'
  push:
    branches:
      - main

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    # Ajout des permissions nécessaires
    permissions:
      contents: write
      packages: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Utiliser le token par défaut avec les permissions étendues
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org/'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Get current version
        id: current_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Bump version
        run: |
          npm version ${{ github.event.inputs.version || 'patch' }} --no-git-tag-version

      - name: Get new version
        id: new_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Check if version exists on npm
        id: check_version
        run: |
          if npm view n8n-nodes-linkedin-jobs@${{ steps.new_version.outputs.version }} version 2>/dev/null; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Version ${{ steps.new_version.outputs.version }} already exists on npm"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Version ${{ steps.new_version.outputs.version }} is new"
          fi

      - name: Publish to npm
        if: steps.check_version.outputs.exists == 'false'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public

      - name: Skip publish (version exists)
        if: steps.check_version.outputs.exists == 'true'
        run: |
          echo "⚠️  Version ${{ steps.new_version.outputs.version }} already exists on npm. Skipping publish."
          # Reset to previous version in package.json
          npm version ${{ steps.current_version.outputs.version }} --no-git-tag-version

      - name: Push version bump
        if: steps.check_version.outputs.exists == 'false'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json package-lock.json
          git commit -m "ci: bump version to ${{ steps.new_version.outputs.version }} [skip ci]" || echo "No changes to commit"
          git push